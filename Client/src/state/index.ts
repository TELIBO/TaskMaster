import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Define an interface for the initial state of the slice
export interface initialStateTypes {
  isSidebarCollapsed: boolean; // Boolean to track whether the sidebar is collapsed
  isDarkMode: boolean; // Boolean to track whether dark mode is enabled
}

// Define the initial state for the slice using the interface
const initialState: initialStateTypes = {
  isSidebarCollapsed: false, // Initially, the sidebar is not collapsed
  isDarkMode: false, // Initially, dark mode is disabled
};

// Create a slice for the global state using Redux Toolkit's createSlice function
export const globalSlice = createSlice({
  name: "global", // The name of the slice
  initialState, // The initial state defined above
  reducers: {
    // Reducer to update the state of whether the sidebar is collapsed
    setIsSidebarCollapsed: (state, action: PayloadAction<boolean>) => {
      state.isSidebarCollapsed = action.payload; // Set the state based on the action payload
    },
    // Reducer to update the state of whether dark mode is enabled
    setIsDarkMode: (state, action: PayloadAction<boolean>) => {
      state.isDarkMode = action.payload; // Set the state based on the action payload
    },
  },
});

// Export the actions generated by createSlice to be used in components
export const { setIsSidebarCollapsed, setIsDarkMode } = globalSlice.actions;

// Export the reducer to be used in the store
export default globalSlice.reducer;
